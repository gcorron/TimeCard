@model TimeCard.ViewModels.PaymentViewModel

@using (Ajax.BeginForm("Index", null, new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "edit", OnFailure = "console.log('Server ajax error');" }, new { id = "formPayment" }))
{
    <div class="card mt-3">
        <div class="card-header">
            <div class="form-group row align-self-center">
                @{ if (Model.IsAdmin)
                    {
                        <div class="col-md-2 col-form-label text-right">Contractor</div>
                        <div class="col-md-3">@Html.DropDownListFor(m => m.SelectedContractorId, Model.Contractors, new { @class = "form-control" })</div>
                    }
                    else
                    {
                        @Html.HiddenFor(m => m.SelectedContractorId)
                    }
                }
                <div class="col-md-1 col-form-label text-right">Job</div>
                <div class="col-md-3">@Html.DropDownListFor(m => m.SelectedJobId, Model.Jobs, new { @class = "form-control" })</div>
            </div>
        </div>
        <div class="card-body @(Model.EditPayment.PayId == 0 ? "bg-success" : "bg-info" )" id="divEdit" style=@(Model.CanEdit ? "" : "display:none;")>
            <div class="form-group form-row">
                <div class="col-md-1 col-form-label text-right">Date</div>
                <div class="col-md-2">@Html.TextBoxFor(m => m.EditPayment.PayDate, new { @class = "form-control", type = "date" })</div>
                <div class="col-md-1 col-form-label text-right">Amount</div>
                
                <div class="col-md-2">@Html.TextBoxFor(m => m.EditPayment.Hours, new { @class = "form-control", type = "number", min = "0", max = "400", step = "0.25" })</div>
                <div class="col-md-1 col-form-label text-right">Check #</div>
                <div class="col-md-2">@Html.TextBoxFor(m => m.EditPayment.CheckNo, new { @class = "form-control", type = "number", maxlength = "5" })</div>
                <div class="col-md-3 text-right">
                    <button class="btn btn-default fa fa-2x fa-plus edit-button" type="button" id="btnAdd" title="Add" style="display:none;"></button>
                    <button class="btn btn-default fa fa-2x fa-times edit-button cancel" name="buttonValue" style="display:none;" value="Delete" title="Delete" type="submit" onclick="return confirm('Delete are you sure?');"></button>
                    <button class="btn btn-default fa fa-2x fa-check" name="buttonValue" value="Save" title="Save" type="submit"></button>
                </div>

            </div>
        </div>
    </div>
    <div class="row mt-3" style="max-height:450px; overflow-y:auto; position:relative;">
        <div class="col-md-12">
            <table class="table table-sm table-striped table-hover">
                <thead class="sticky">
                    <tr>
                        <th class="work-col-1">Date</th>
                        <th class="work-col-1 text-right">Hours</th>
                        <th class="work-col-1">Check No.</th>
                    </tr>
                </thead>
                <tbody>
                    @{ foreach (var payment in Model.Payments)
                        {
                            <tr class="payment-row" data-edit="@(Json.Encode(new  { payment.PayId }))">
                                <td style="width:15%;">@($"{payment.PayDate:MM/dd/yyyy}")</td>
                                <td  style="width:15%;" class="text-right">@payment.Hours</td>
                                <td  style="width:15%;">@payment.CheckNo</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
@Html.HiddenFor(m => m.EditPayment.PayId)
}
<script>
    $(function () {
        $("#@Html.IdFor(m => m.SelectedJobId)").change(function () {
            $("#formPayment").submit();
        });
        showEditButtons();
        $("tr.payment-row").click(function () {
            $(this).addClass("bg-info").siblings().removeClass("bg-info");
            var data = $(this).data("edit");
            $("#@Html.IdFor(m => m.EditPayment.PayId)").val(data.PayId);
            var theDate = $(this).find('td').eq(0).html();
            theDate = theDate.substr(6, 4) + "-" + theDate.substr(0, 5).replace("/","-");
            $("#@Html.IdFor(m => m.EditPayment.PayDate)").val(theDate);
            $("#@Html.IdFor(m => m.EditPayment.Hours)").val($(this).find('td').eq(1).html());
            $("#@Html.IdFor(m => m.EditPayment.CheckNo)").val($(this).find('td').eq(2).html());
            $("#divEdit").addClass("bg-info").removeClass("bg-success");
            showEditButtons();
        });

        $("#btnAdd").click(function () {
            $("#divEdit").addClass("bg-success").removeClass("bg-info");
            $("#@Html.IdFor(m => m.EditPayment.PayId)").val(0);
            $("#@Html.IdFor(m => m.EditPayment.PayDate)").val(getToday());
            $("#@Html.IdFor(m => m.EditPayment.Hours)").val(0);
            $("#@Html.IdFor(m => m.EditPayment.CheckNo)").val('');
            showEditButtons();
        });
    });

    function showEditButtons() {
        var newWork = $("#@Html.IdFor(m => m.EditPayment.PayId)").val() == 0;
        if (newWork) {
            $("button.edit-button").hide();
        }
        else {
            $("button.edit-button").show();
        }
    }

    function getToday() {
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();

        if (dd < 10) {
            dd = '0' + dd
        }

        if (mm < 10) {
            mm = '0' + mm
        }

        return yyyy + '-' + mm + '-' + dd;
    }
      
</script>

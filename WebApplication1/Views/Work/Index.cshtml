@model TimeCard.ViewModels.WorkViewModel
<style>
    .work-col-1 {
        width: 5%;
    }

    .work-col-2 {
        width: 18%;
    }
</style>

@using (Html.BeginForm("Index", "Work", FormMethod.Post, new { id = "formWork" }))
{
    <div class="card">
        <div class="card-header">
            <div class="form-group row">
                @Html.LabelFor(m => m.SelectedCycle, "Work Period", new { @class = "col-md-2 col-form-label" })
                <div class="col-md-3">
                    @Html.DropDownListFor(m => m.SelectedCycle, Model.PayCycles, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="card-body bg-info">
            <div class="form-group row">
                <label class="col-form-label col-md-1">Date</label>
                <div class="col-md-2">
                    @Html.DropDownListFor(m => m.EditWork.WorkDay, Model.EditDays, new { @class = "form-control" })
                </div>
                <label class="col-form-label col-md-1">Job</label>
                <div class="col-md-3">
                    @Html.DropDownListFor(m => m.EditWork.JobId, Model.Jobs, new { @class = "form-control" })
                </div>
                <label class="col-form-label col-md-1">Hours</label>
                <div class="col-md-1">
                    @Html.TextBoxFor(m => m.EditWork.Hours, new { @class = "form-control", type = "number", min = "0", max = "4", step = "0.25" })
                </div>
                <div class="col-md-3 text-right">
                    <button class="btn btn-default fa fa-2x fa-check"></button>
                </div>
                <label class="col-form-label col-md-1">Descr</label>
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.EditWork.Descr, new { @class = "form-control", style = "min-width:100%;" })
                </div>
                @Html.HiddenFor(m => m.EditWork.WorkId)
                @Html.HiddenFor(m => m.EditWork.WorkDay)
                @Html.HiddenFor(m => m.EditWork.JobId)
            </div>
    </div>
    </div>
    <div class="row mt-3" style="max-height:450px; overflow-y:auto; position:relative;">
        <div class="col-md-12">
            <table class="table table-sm table-striped table-hover">
                <thead class="sticky">
                    <tr>
                        <th class="work-col-1">Date</th>
                        <th class="work-col-2">Job</th>
                        <th class="work-col-1 text-right">Hours</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @{ foreach (var entry in Model.WorkEntries)
                        {
                            <tr class="work-row" data-edit="@(Json.Encode(new  { entry.WorkId, entry.JobId, entry.WorkDay }))">
                                <td class="work-col-1">@entry.WorkDate</td>
                                <td class="work-col-2">@entry.Job</td>
                                <td class="work-col-1 text-right">@entry.Hours</td>
                                <td>@entry.Descr</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
}
<script>
    $(function () {
        $("#@Html.IdFor(m => m.SelectedCycle)").change(function () {
            $("#formWork").submit();
        });
        $("tr.work-row").click(function () {
            $(this).addClass("bg-info").siblings().removeClass("bg-info");
            var data = $(this).data("edit");
            $("#@Html.IdFor(m => m.EditWork.WorkId)").val(data.WorkId);
            $("#@Html.IdFor(m => m.EditWork.WorkDay)").val(data.WorkDay.toString());
            $("#@Html.IdFor(m => m.EditWork.JobId)").val(data.JobId);
            $("#@Html.IdFor(m => m.EditWork.Hours)").val($(this).find('td').eq(2).html());
            $("#@Html.IdFor(m => m.EditWork.Descr)").val($(this).find('td').eq(3).html());
        });
    })
</script>
